---
apiVersion: v1
kind: Template
metadata:
  labels:
    addressType: topic
    app: enmasse
  name: tls-topic-persisted
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: enmasse
    name: pvc-${NAME}
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: ${STORAGE_CAPACITY}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      address: ${ADDRESS}
      app: enmasse
      multicast: 'true'
      store_and_forward: 'true'
      type: address-config
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      address: ${ADDRESS}
      role: broker
    template:
      metadata:
        labels:
          address: ${ADDRESS}
          app: enmasse
          role: broker
      spec:
        containers:
        - env:
          - name: TOPIC_NAME
            value: ${ADDRESS}
          image: artemis
          lifecycle:
            preStop:
              exec:
                command:
                - /opt/artemis-shutdown-hook/bin/artemis-shutdown-hook
          livenessProbe:
            tcpSocket:
              port: amqp
          name: broker
          ports:
          - containerPort: 5673
            name: amqp
          - containerPort: 61616
            name: core
          - containerPort: 8161
            name: jolokia
          volumeMounts:
          - mountPath: /var/run/artemis
            name: vol-${NAME}
        - env:
          - name: LINK_CAPACITY
            value: ${ROUTER_LINK_CAPACITY}
          - name: TOPIC_NAME
            value: ${ADDRESS}
          image: router
          livenessProbe:
            tcpSocket:
              port: amqp
          name: router
          ports:
          - containerPort: 5672
            name: amqp
            protocol: TCP
          - containerPort: 55673
            name: internal
            protocol: TCP
          - containerPort: 5671
            name: amqps
            protocol: TCP
          volumeMounts:
          - mountPath: /etc/qpid-dispatch/ssl
            name: ssl-certs
            readOnly: true
        - env:
          - name: TOPIC_NAME
            value: ${ADDRESS}
          image: topic-forwarder
          livenessProbe:
            httpGet:
              path: /health
              port: health
          name: forwarder
          ports:
          - containerPort: 8080
            name: health
        volumes:
        - name: vol-${NAME}
          persistentVolumeClaim:
            claimName: pvc-${NAME}
        - name: ssl-certs
          secret:
            secretName: qdrouterd-certs
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - broker
        from:
          kind: ImageStreamTag
          name: artemis:latest
      type: ImageChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - router
        from:
          kind: ImageStreamTag
          name: router:latest
      type: ImageChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - forwarder
        from:
          kind: ImageStreamTag
          name: topic-forwarder:latest
      type: ImageChange
parameters:
- description: Storage capacity required for volume claims
  name: STORAGE_CAPACITY
  value: 2Gi
- description: The link capacity setting for router
  name: ROUTER_LINK_CAPACITY
  value: '50'
- description: A valid name for the instance
  name: NAME
  required: true
- description: The address to use for the topic
  name: ADDRESS
  required: true
